@TechReport{futures:98,
  author = {Michael Mehl and Christian Schulte and Gert Smolka},
  title =  {Futures and By-need Synchronization},
  note  =  {DRAFT},
  INSTITUTION = {Programming Systems Lab, DFKI and Universit{\"a}t des 
Saarlandes},
  year = {1998},
  month = may,
  abstract = {We propose a conservative extension of Oz that adds futures and
  by-need synchronization. Futures are read-only views of logic
  variables that make it possible to statically limit the scope in
  which a variable can be constrained. For instance, one can
  express with futures safe streams that cannot be assigned by
  their readers. By-need synchronization makes it possible to
  synchronize a thread on the event that a thread blocks on a
  future. It is used to express dynamic linking and lazy
  functions.},
  project-key={C1},
  ma-key={mehl@ps.uni-sb.de schulte@ps.uni-sb.de smolka@ps.uni-sb.de}
}

