<HTML><HEAD><TITLE>Tcl Library Procedures - Tcl_Eval manual page</TITLE></HEAD><BODY>
<H3><A NAME="M2">NAME</A></H3>
Tcl_Eval, Tcl_VarEval, Tcl_EvalFile, Tcl_GlobalEval - execute Tcl commands
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
int<BR>
<B>Tcl_Eval</B>(<I>interp, cmd</I>)<BR>
int<BR>
<B>Tcl_VarEval</B>(<I>interp, string, string, ... </I><B>(char *) NULL</B>)<BR>
int<BR>
<B>Tcl_EvalFile</B>(<I>interp, fileName</I>)<BR>
int<BR>
<B>Tcl_GlobalEval</B>(<I>interp, cmd</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<P><DT><A HREF="../TclLib/Interp.htm">Tcl_Interp</A> <B>*interp</B> (in)<DD>
Interpreter in which to execute the command.
A string result will be stored in <I>interp-&gt;result</I>.
<P><DT>char <B>*cmd</B> (in)<DD>
Command (or sequence of commands) to execute.  Must be in writable
memory (<B>Tcl_Eval</B> makes temporary modifications to the command).
<P><DT>char <B>*string</B> (in)<DD>
String forming part of Tcl command.
<P><DT>char <B>*fileName</B> (in)<DD>
Name of file containing Tcl command string.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
All four of these procedures execute Tcl commands.
<B>Tcl_Eval</B> is the core procedure and is used by all the others.
It executes the commands in the script held by <I>cmd</I>
until either an error occurs or it reaches the end of the script.
<P>
Note that <B>Tcl_Eval</B> and <B>Tcl_GlobalEval</B>
have been largely replaced by the
object-based procedures <B><A HREF="../TclLib/EvalObj.htm">Tcl_EvalObj</A></B> and <B><A HREF="../TclLib/EvalObj.htm">Tcl_GlobalEvalObj</A></B>.
Those object-based procedures evaluate a script held in a Tcl object
instead of a string.
The object argument can retain the bytecode instructions for the script
and so avoid reparsing the script each time it is executed.
<B>Tcl_Eval</B> is implemented using <B><A HREF="../TclLib/EvalObj.htm">Tcl_EvalObj</A></B>
but is slower because it must reparse the script each time
since there is no object to retain the bytecode instructions.
<P>
The return value from <B>Tcl_Eval</B> is one of the Tcl return codes
<B>TCL_OK</B>, <B>TCL_ERROR</B>, <B>TCL_RETURN</B>, <B>TCL_BREAK</B>, or
<B>TCL_CONTINUE</B>, and <I>interp-&gt;result</I> will point to
a string with additional information (a result value or error message).
If an error occurs during compilation, this return information
describes the error.
Otherwise, this return information corresponds to the last command
executed from <I>cmd</I>.
<P>
<B>Tcl_VarEval</B> takes any number of string arguments
of any length, concatenates them into a single string,
then calls <B>Tcl_Eval</B> to execute that string as a Tcl command.
It returns the result of the command and also modifies
<I>interp-&gt;result</I> in the usual fashion for Tcl commands.
The last argument to <B>Tcl_VarEval</B> must be NULL to indicate the end
of arguments.
<P>
<B>Tcl_EvalFile</B> reads the file given by <I>fileName</I> and evaluates
its contents as a Tcl command by calling <B>Tcl_Eval</B>.  It returns
a standard Tcl result that reflects the result of evaluating the file.
If the file couldn't be read then a Tcl error is returned to describe
why the file couldn't be read.
<P>
During the processing of a Tcl command it is legal to make nested
calls to evaluate other commands (this is how procedures and
some control structures are implemented).
If a code other than <B>TCL_OK</B> is returned
from a nested <B>Tcl_Eval</B> invocation,
then the caller should normally return immediately,
passing that same return code back to its caller,
and so on until the top-level application is reached.
A few commands, like <B><A HREF="../TclCmd/for.htm">for</A></B>, will check for certain
return codes, like <B>TCL_BREAK</B> and <B>TCL_CONTINUE</B>, and process them
specially without returning.
<P>
<B>Tcl_Eval</B> keeps track of how many nested <B>Tcl_Eval</B>
invocations are in progress for <I>interp</I>.
If a code of <B>TCL_RETURN</B>, <B>TCL_BREAK</B>, or <B>TCL_CONTINUE</B> is
about to be returned from the topmost <B>Tcl_Eval</B>
invocation for <I>interp</I>,
it converts the return code to <B>TCL_ERROR</B>
and sets <I>interp-&gt;result</I>
to point to an error message indicating that
the <B><A HREF="../TclCmd/return.htm">return</A></B>, <B><A HREF="../TclCmd/break.htm">break</A></B>, or <B><A HREF="../TclCmd/continue.htm">continue</A></B> command was
invoked in an inappropriate place.
This means that top-level applications should never see a return code
from <B>Tcl_Eval</B> other then <B>TCL_OK</B> or <B>TCL_ERROR</B>.

<H3><A NAME="M6">SEE ALSO</A></H3>
<B><A HREF="../TclLib/EvalObj.htm">Tcl_EvalObj</A></B>, <B><A HREF="../TclLib/EvalObj.htm">Tcl_GlobalEvalObj</A></B>
<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#command">command</A>, <A href="../Keywords/E.htm#execute">execute</A>, <A href="../Keywords/F.htm#file">file</A>, <A href="../Keywords/G.htm#global">global</A>, <A href="../Keywords/O.htm#object">object</A>, <A href="../Keywords/O.htm#object result">object result</A>, <A href="../Keywords/V.htm#variable">variable</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1989-1993 The Regents of the University of California.
<A HREF="../copyright.htm">Copyright</A> &#169; 1994-1997 Sun Microsystems, Inc.
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
