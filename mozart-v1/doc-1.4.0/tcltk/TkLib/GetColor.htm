<HTML><HEAD><TITLE>Tk Library Procedures - Tk_GetColor manual page</TITLE></HEAD><BODY>
<DL>
<DD><A HREF="GetColor.htm#M2" NAME="L245">NAME</A>
<DL><DD>Tk_GetColor, Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColor - maintain database of colors</DL>
<DD><A HREF="GetColor.htm#M3" NAME="L246">SYNOPSIS</A>
<DL>
</DL>
<DD><A HREF="GetColor.htm#M4" NAME="L247">ARGUMENTS</A>
<DL>
</DL>
<DD><A HREF="GetColor.htm#M5" NAME="L248">DESCRIPTION</A>
<DL>
<DD><A HREF="GetColor.htm#M6" NAME="L249"><I>colorname</I></A>
<DD><A HREF="GetColor.htm#M7" NAME="L250"><B>#</B><I>RGB</I></A>
<DD><A HREF="GetColor.htm#M8" NAME="L251"><B>#</B><I>RRGGBB</I></A>
<DD><A HREF="GetColor.htm#M9" NAME="L252"><B>#</B><I>RRRGGGBBB</I></A>
<DD><A HREF="GetColor.htm#M10" NAME="L253"><B>#</B><I>RRRRGGGGBBBB</I></A>
</DL>
<DD><A HREF="GetColor.htm#M11" NAME="L254">KEYWORDS</A>
</DL><HR>
<H3><A NAME="M2">NAME</A></H3>
Tk_GetColor, Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColor - maintain database of colors
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tk.h&gt;</B><BR>
XColor *<BR>
<B>Tk_GetColor</B>(<I>interp, tkwin, nameId</I><B>)</B><BR>
XColor *<BR>
<B>Tk_GetColorByValue</B>(<I>tkwin, prefPtr</I><B>)</B><BR>
char *<BR>
<B>Tk_NameOfColor(</B><I>colorPtr</I><B>)</B><BR>
GC<BR>
<B>Tk_GCForColor</B>(<I>colorPtr, drawable</I>)<BR>
<B>Tk_FreeColor(</B><I>colorPtr</I><B>)</B><BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<P><DT><A HREF="../TclLib/Interp.htm">Tcl_Interp</A> <B>*interp</B> (in)<DD>
Interpreter to use for error reporting.
<P><DT>Tk_Window <B>tkwin</B> (in)<DD>
Token for window in which color will be used.
<P><DT><A HREF="../TkLib/GetUid.htm">Tk_Uid</A> <B>nameId</B> (in)<DD>
Textual description of desired color.
<P><DT>XColor <B>*prefPtr</B> (in)<DD>
Indicates red, green, and blue intensities of desired
color.
<P><DT>XColor <B>*colorPtr</B> (in)<DD>
Pointer to X color information.  Must have been allocated by previous
call to <B>Tk_GetColor</B> or <B>Tk_GetColorByValue</B>, except when passed
to <B>Tk_NameOfColor</B>.
<P><DT>Drawable <B>drawable</B> (in)<DD>
Drawable in which the result graphics context will be used.  Must have
same screen and depth as the window for which the color was allocated.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
The <B>Tk_GetColor</B> and <B>Tk_GetColorByValue</B> procedures
locate pixel values that may be used to render particular
colors in the window given by <I>tkwin</I>.  In <B>Tk_GetColor</B>
the desired color is specified with a <A HREF="../TkLib/GetUid.htm">Tk_Uid</A> (<I>nameId</I>), which
may have any of the following forms:
<P>
<DL>
<P><DT><A NAME="M6"><I>colorname</I></A><DD>
Any of the valid textual names for a color defined in the
server's color database file, such as <B>red</B> or <B>PeachPuff</B>.
<P><DT><A NAME="M7"><B>#</B><I>RGB</I></A><DD>
<P><DT><A NAME="M8"><B>#</B><I>RRGGBB</I></A><DD>
<P><DT><A NAME="M9"><B>#</B><I>RRRGGGBBB</I></A><DD>
<P><DT><A NAME="M10"><B>#</B><I>RRRRGGGGBBBB</I></A><DD>
A numeric specification of the red, green, and blue intensities
to use to display the color.  Each <I>R</I>, <I>G</I>, or <I>B</I>
represents a single hexadecimal digit.  The four forms permit
colors to be specified with 4-bit, 8-bit, 12-bit or 16-bit values.
When fewer than 16 bits are provided for each color, they represent
the most significant bits of the color.  For example, #3a7 is the
same as #3000a0007000.
<P></DL>
<P>
In <B>Tk_GetColorByValue</B>, the desired color is indicated with
the <I>red</I>, <I>green</I>, and <I>blue</I> fields of the structure
pointed to by <I>colorPtr</I>.
<P>
If <B>Tk_GetColor</B> or <B>Tk_GetColorByValue</B> is successful
in allocating the desired color, then it returns a pointer to
an XColor structure;  the structure indicates the exact intensities of
the allocated color (which may differ slightly from those requested,
depending on the limitations of the screen) and a pixel value
that may be used to draw in the color.
If the colormap for <I>tkwin</I> is full, <B>Tk_GetColor</B>
and <B>Tk_GetColorByValue</B> will use the closest existing color
in the colormap.
If <B>Tk_GetColor</B> encounters an error while allocating
the color (such as an unknown color name) then NULL is returned and
an error message is stored in <I>interp-&gt;result</I>;
<B>Tk_GetColorByValue</B> never returns an error.
<P>
<B>Tk_GetColor</B> and <B>Tk_GetColorByValue</B> maintain a database
of all the colors currently in use.
If the same <I>nameId</I> is requested multiple times from
<B>Tk_GetColor</B> (e.g. by different windows), or if the
same intensities are requested multiple times from
<B>Tk_GetColorByValue</B>, then existing pixel values will
be re-used.  Re-using an existing pixel avoids any interaction
with the X server, which makes the allocation much more
efficient.  For this reason, you should generally use
<B>Tk_GetColor</B> or <B>Tk_GetColorByValue</B>
instead of Xlib procedures like <B>XAllocColor</B>,
<B>XAllocNamedColor</B>, or <B>XParseColor</B>.
<P>
Since different calls to <B>Tk_GetColor</B> or <B>Tk_GetColorByValue</B>
may return the same shared
pixel value, callers should never change the color of a pixel
returned by the procedures.
If you need to change a color value dynamically, you should use
<B>XAllocColorCells</B> to allocate the pixel value for the color.
<P>
The procedure <B>Tk_NameOfColor</B> is roughly the inverse of
<B>Tk_GetColor</B>.  If its <I>colorPtr</I> argument was created
by <B>Tk_GetColor</B>, then the return value is the <I>nameId</I>
string that was passed to <B>Tk_GetColor</B> to create the
color.  If <I>colorPtr</I> was created by a call to <B>Tk_GetColorByValue</B>,
or by any other mechanism, then the return value is a string
that could be passed to <B>Tk_GetColor</B> to return the same
color.  Note:  the string returned by <B>Tk_NameOfColor</B> is
only guaranteed to persist until the next call to <B>Tk_NameOfColor</B>.
<P>
<B>Tk_GCForColor</B> returns a graphics context whose <B>Foreground</B>
field is the pixel allocated for <I>colorPtr</I> and whose other fields
all have default values.
This provides an easy way to do basic drawing with a color.
The graphics context is cached with the color and will exist only as
long as <I>colorPtr</I> exists;  it is freed when the last reference
to <I>colorPtr</I> is freed by calling <B>Tk_FreeColor</B>.
<P>
When a pixel value returned by <B>Tk_GetColor</B> or
<B>Tk_GetColorByValue</B> is no longer
needed, <B>Tk_FreeColor</B> should be called to release the color.
There should be exactly one call to <B>Tk_FreeColor</B> for
each call to <B>Tk_GetColor</B> or <B>Tk_GetColorByValue</B>.
When a pixel value is no longer in
use anywhere (i.e. it has been freed as many times as it has been gotten)
<B>Tk_FreeColor</B> will release it to the X server and delete it from
the database.

<H3><A NAME="M11">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#color">color</A>, <A href="../Keywords/I.htm#intensity">intensity</A>, <A href="../Keywords/P.htm#pixel value">pixel value</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1990, 1991 The Regents of the University of California.
<A HREF="../copyright.htm">Copyright</A> &#169; 1994-1996 Sun Microsystems, Inc.
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
