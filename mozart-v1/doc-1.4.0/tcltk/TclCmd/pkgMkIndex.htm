<HTML><HEAD><TITLE>Tcl Built-In Commands - pkg_mkIndex manual page</TITLE></HEAD><BODY>
<H3><A NAME="M2">NAME</A></H3>
pkg_mkIndex - Build an index for automatic loading of packages
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>pkg_mkIndex </B><I>dir</I> <I>pattern </I>?<I>pattern pattern ...</I>?<BR>
<H3><A NAME="M4">DESCRIPTION</A></H3>
<B>Pkg_mkIndex</B> is a utility procedure that is part of the standard
Tcl library.
It is used to create index files that allow packages to be loaded
automatically when <B>package require</B> commands are executed.
To use <B>pkg_mkIndex</B>, follow these steps:
<P>
<DL>
<P><DT>[1]<DD>
Create the package(s).
Each package may consist of one or more Tcl script files or binary files.
Binary files must be suitable for loading with the <B><A HREF="../TclCmd/load.htm">load</A></B> command
with a single argument;  for example, if the file is <B>test.so</B> it must
be possible to load this file with the command <B>load test.so</B>.
Each script file must contain a <B>package provide</B> command to declare
the package and version number, and each binary file must contain
a call to <B><A HREF="../TclLib/PkgRequire.htm">Tcl_PkgProvide</A></B>.
<P><DT>[2]<DD>
Create the index by invoking <B>pkg_mkIndex</B>.
The <I>dir</I> argument gives the name of a directory and each
<I>pattern</I> argument is a <B><A HREF="../TclCmd/glob.htm">glob</A></B>-style pattern that selects
script or binary files in <I>dir</I>.
<B>Pkg_mkIndex</B> will create a file <B>pkgIndex.tcl</B> in <I>dir</I>
with package information about all the files given by the <I>pattern</I>
arguments.
It does this by loading each file and seeing what packages
and new commands appear (this is why it is essential to have
<B>package provide</B> commands or <B><A HREF="../TclLib/PkgRequire.htm">Tcl_PkgProvide</A></B> calls
in the files, as described above).
<P><DT>[3]<DD>
Install the package as a subdirectory of one of the directories given by
the <B>tcl_pkgPath</B> variable.  If <B>$tcl_pkgPath</B> contains more
than one directory, machine-dependent packages (e.g., those that
contain binary shared libraries) should normally be installed
under the first directory and machine-independent packages (e.g.,
those that contain only Tcl scripts) should be installed under the
second directory.
The subdirectory should include
the package's script and/or binary files as well as the <B>pkgIndex.tcl</B>
file.  As long as the package is installed as a subdirectory of a
directory in <B>$tcl_pkgPath</B> it will automatically be found during
<B>package require</B> commands.
<P>
If you install the package anywhere else, then you must ensure that
the directory contaiingn the package is in the <B>auto_path</B> global variable
or an immediate subdirectory of one of the directories in <B>auto_path</B>.
<B>Auto_path</B> contains a list of directories that are searched
by both the auto-loader and the package loader; by default it
includes <B>$tcl_pkgPath</B>.
The package loader also checks all of the subdirectories of the
directories in <B>auto_path</B>.
You can add a directory to <B>auto_path</B> explicitly in your
application, or you can add the directory to your <B>TCLLIBPATH</B>
environment variable:  if this environment variable is present,
Tcl initializes <B>auto_path</B> from it during application startup.
<P><DT>[4]<DD>
Once the above steps have been taken, all you need to do to use a
package is to invoke <B>package require</B>.
For example, if versions 2.1, 2.3, and 3.1 of package <B>Test</B>
have been indexed by <B>pkg_mkIndex</B>, the command
<B>package require Test</B> will make version 3.1 available
and the command <B>package require -exact Test 2.1</B> will
make version 2.1 available.
There may be many versions of a package in the various index files
in <B>auto_path</B>, but only one will actually be loaded in a given
interpreter, based on the first call to <B>package require</B>.
Different versions of a package may be loaded in different
interpreters.

<P></DL>
<H3><A NAME="M5">PACKAGES AND THE AUTO-LOADER</A></H3>
The package management facilities overlap somewhat with the auto-loader,
in that both arrange for files to be loaded on-demand.
However, package management is a higher-level mechanism that uses
the auto-loader for the last step in the loading process.
It is generally better to index a package with <B>pkg_mkIndex</B>
rather than <B>auto_mkindex</B> because the package mechanism provides
version control:  several versions of a package can be made available
in the index files, with different applications using different
versions based on <B>package require</B> commands.
In contrast, <B>auto_mkindex</B> does not understand versions so
it can only handle a single version of each package. 
It is probably not a good idea to index a given package with both
<B>pkg_mkIndex</B> and <B>auto_mkindex</B>.
If you use <B>pkg_mkIndex</B> to index a package, its commands cannot
be invoked until <B>package require</B> has been used to select a
version;  in contrast, packages indexed with <B>auto_mkindex</B>
can be used immediately since there is no version control.

<H3><A NAME="M6">HOW IT WORKS</A></H3>
<B>Pkg_mkIndex</B> depends on the <B>package unknown</B> command,
the <B>package ifneeded</B> command, and the auto-loader.
The first time a <B>package require</B> command is invoked,
the <B>package unknown</B> script is invoked.
This is set by Tcl initialization to a script that
evaluates all of the <B>pkgIndex.tcl</B> files in the
<B>auto_path</B>.
The <B>pkgIndex.tcl</B> files contain <B>package ifneeded</B>
commands for each version of each available package;  these commands
invoke <B>package provide</B> commands to announce the
availability of the package, and they setup auto-loader
information to load the files of the package.
A given file of a given version of a given package isn't
actually loaded until the first time one of its commands
is invoked.
Thus, after invoking <B>package require</B> you won't see
the package's commands in the interpreter, but you will be able
to invoke the commands and they will be auto-loaded.

<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/A.htm#auto-load">auto-load</A>, <A href="../Keywords/I.htm#index">index</A>, <A href="../Keywords/P.htm#package">package</A>, <A href="../Keywords/V.htm#version">version</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1996 Sun Microsystems, Inc.
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
