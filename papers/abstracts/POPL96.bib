@inproceedings{NiehrenPopl:96,
   author = {Niehren, Joachim},
   title  = {Functional Computation as Concurrent Computation},
   booktitle =  {$23^{th}$ Proceedings of the {ACM} Symposium on Principles of Programming Languages},
   annote = {St. Petersburg Beach, Florida},
   publisher =  {{The ACM Press}},
   year =       {1996},
   pages = {333--343},
   month = {21--24}#jan,
   note =       {longer version appeared as DFKI Research Report RR-95-14},
   filename = "POPL96.dvi.gz, POPL96.ps.gz",
   directory = "ProgrammingSysLab",
  project-key={C1},
  ma-key={niehren@ps.uni-sb.de},
  abstract={We investigate functional computation as a special form 
of concurrent computation. As formal basis, we use a 
uniformly confluent core of the pi-calculus,
which is
also contained in models of higher-order concurrent
constraint programming. We embed the call-by-need 
and the call-by-value lambda-calculus
into the
pi-calculus. We prove that call-by-need
complexity is
dominated by call-by-value complexity. In contrast to 
the recently proposed call-by-need lambda-calculus,
our concurrent call-by-need model incorporates mutual 
recursion and can be extended to cyclic data structures 
by means of constraints.}
}

